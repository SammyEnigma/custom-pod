## vars ###

{% set var_main_dir = params.main.custom_dir + '/discourse' %}
{% set var_discourse_dir = params.main.discourse_dir %}
{% set var_containers = params.main.containers | default([]) %}

{% set var_local = params.main.local | default(false) | bool %}
{% set var_run = params.main.run | default({}) %}
{% set var_run_dict = params.main.run_dict | default({}) %}

{% set var_pod_dir_rel = '../..' %}
{% set var_data_dir = var_local 
  | ternary(var_pod_dir_rel + '/' + params.pod.data_dir, params.pod.data_dir) %}

{% set var_static = params.main.static | default('false') | bool %}

{% if var_static %}
  {% set var_templates_files = [
    'web.template.build.yml',
    'web.template.run.yml',
    'web.template.validate.yml'
  ] %}
{% endif %}

### main ###

{% if ((var_templates_files | default([]) | length) > 0) %}

files:

{% for item in var_templates_files %}

- src: "{{ var_main_dir }}/files/templates/{{ item }}"
  dest: "{{ var_discourse_dir }}/templates/{{ item }}"
  root: true

{% endfor %}

{% endif %}

templates:

{% for item in var_containers %}

{% set var_docker_args = item.params.docker_args | default([]) %}
{% set ns_docker_args = namespace(list=var_docker_args) %}

{% for subitem in params.dependencies | default([]) %}
  {% set ns_docker_args.list = ns_docker_args.list + 
    ['--add-host ' + subitem.host + ':' + subitem.ip]
  %}
{% endfor %}

{% set var_params = item.params | combine({ 'docker_args': ns_docker_args.list }) %}
{% set var_params_env = var_params.env | default({}) %}
{% set var_db_host = params.dependencies_node_ip_dict['db'] | default('') %}
{% set var_redis_host = params.dependencies_node_ip_dict['redis'] | default('') %}

{% if var_db_host != '' %}
  {% set var_params_env = var_params_env 
    | combine({ 'DISCOURSE_DB_HOST': var_db_host }) 
  %}
{% endif %}

{% if var_redis_host != '' %}
  {% set var_params_env = var_params_env 
    | combine({ 'DISCOURSE_REDIS_HOST': var_redis_host }) 
  %}
{% endif %}

{% set var_params = var_params | combine({ 'env': var_params_env }) %}

- src: "{{ var_main_dir }}/templates/{{ item.name_src }}"
  dest: "{{ var_discourse_dir }}/containers/{{ item.name_dest }}"
  root: true
  params: {{ var_params | to_json }}

{% endfor %}

{% if var_run | default({}) | dict2items | list | length > 0 %}

- src: "{{ var_main_dir }}/templates/docker-compose.env"
  dest: "{{ var_main_dir }}/.env"
  root: true
  params: 
    ctx_name: "{{ params.env_name }}-{{ params.ctx_name }}-{{ params.pod.name }}"
    data_dir: "{{ var_data_dir }}"
    local: "{{ var_local | default(false) | bool | ternary('true', 'false') }}"
    toolbox_image: "{{ params.main.custom_images.toolbox_image }}"
    toolbox_version: "{{ params.main.custom_images.toolbox_version }}"
    awscli_image: "{{ params.main.custom_images.awscli_image }}"
    awscli_version: "{{ params.main.custom_images.awscli_version }}"
    postgres_image: "{{ params.main.custom_images.postgres_image }}"
    postgres_version: "{{ params.main.custom_images.postgres_version }}"
    s3_backup_access_key: "{{ params.credentials.discourse_backup_bucket.access_key }}"
    s3_backup_secret_key: "{{ params.credentials.discourse_backup_bucket.secret_key }}"
    container_mem_s3_backup: "{{ params.main.custom_memory.s3_backup }}"
    container_mem_toolbox: "{{ params.main.custom_memory.toolbox }}"
    container_mem_postgres: "{{ params.main.custom_memory.postgres }}"
    postgres_host_ip: "{{ params.dependencies_node_ip_dict['db'] | default('') }}"
    fluentd_image: "{{ params.main.custom_images.fluentd_image }}"
    fluentd_version: "{{ params.main.custom_images.fluentd_version }}"
    fluentd_port: "{{ params.main.custom_args.fluentd.port }}"
    container_mem_fluentd: "{{ params.main.custom_memory.fluentd }}"
    fluentd_output_plugin: "file"

{% endif %}

{% if var_run | default({}) | dict2items | list | length > 0 %}

children:

- name: "main/scripts/vars.run.yml"
  params:
    env_params: {{ params | to_json }}
    pod_custom_dir: "{{ var_main_dir }}"
    run: {{ var_run | to_json }}
    run_dict: {{ var_run_dict | to_json }}

{% endif %}
