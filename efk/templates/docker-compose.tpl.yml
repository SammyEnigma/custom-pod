version: '2.4'

x-logging:

  {% if params.use_fluentd | bool %}

  mainlog: &mainlog
    driver: "fluentd"
    options:
      tag: "{% raw %}docker.{{.Name}}{% endraw %}"
      fluentd-address: "localhost:{{ params.fluentd_port }}"
  jsonlog: &jsonlog
    driver: "json-file"
    options:
      max-size: "50m"

  {% else %}

  mainlog: &mainlog
    driver: "json-file"
    options:
      max-size: "50m"

  {% endif %}

networks:

  {% if params.use_fluentd | bool %}

  log:
    driver: "bridge"

  {% endif %}

  shared:
    external: true
    name: "${CTX_NAME}-network"

{% if (params.local | bool) and (params.named_volumes | bool) %}

volumes:
  elasticsearch: {}

{% endif %}

services:

  {% if params.pod_type in ['app', 'web'] %}

  {% if params.use_nginx | bool %}

  nginx:
    container_name: "${CTX_PREFIX_MAIN}nginx"
    hostname: "nginx"
    build:
      context: .
      dockerfile: "shared/containers/nginx/Dockerfile"
      args:
        IMAGE: "{{ params.images.nginx_image }}"
        VERSION: "{{ params.images.nginx_version }}"
    restart: "unless-stopped"

    {% if params.use_fluentd | bool %}

    depends_on:
    - "fluentd"

    {% endif %}

    ports:
    - "{{ params.public_http_port }}:80"
    - "{{ params.public_https_port }}:443"
    - "{{ params.private_http_port }}:9080"
    - "{{ params.private_https_port }}:9443"
    networks:
    - "shared"
    volumes:

    {% if params.use_custom_ssl | default(false) | bool %}

    - "./env/nginx/ssl:/etc/ssl:ro"

    {% elif params.use_certbot | default(false) | bool %}

    - "$DATA_DIR/sync/certbot/etc:/etc/ssl:ro"

    {% endif %}

    - "$DATA_DIR/sync/certbot/www:/var/www/certbot:ro"
    - "$DATA_DIR/sync/nginx:/var/main/data/sync/nginx:ro"
    - "$DATA_DIR/tmp/nginx:/tmp/main/nginx"
    - "$DATA_DIR/tmp/tmp/nginx:/tmp/main/tmp/nginx"
    logging: *mainlog

    {% if (params.memory.nginx | default('')) != '' %}

    mem_limit: "{{ params.memory.nginx }}"

    {% endif %}

  {% endif %}

  kibana:
    container_name: "${CTX_PREFIX_MAIN}kibana"
    hostname: "kibana"
    build:
      context: .
      dockerfile: "{{ params.main_dir }}/containers/kibana/Dockerfile"
      args:
        IMAGE: "{{ params.images.kibana_image }}"
        VERSION: "{{ params.images.kibana_version }}"
    restart: "unless-stopped"

    {% if not (params.use_nginx | bool) %}

    ports:
    - "{{ params.kibana_port }}:5601"

    {% endif %}

    networks:
    - "shared"

    {% if params.pod_type == 'web' %}

    extra_hosts:
    - "elasticsearch:$DB_HOST_IP"

    {% endif %}

    volumes:
    - "$DATA_DIR/tmp/kibana:/tmp/main/kibana"
    - "$DATA_DIR/tmp/tmp/kibana:/tmp/main/tmp/kibana"
    logging: *mainlog

    {% if (params.memory.kibana | default('')) != '' %}

    mem_limit: "{{ params.memory.kibana }}"

    {% endif %}

  {% if params.use_theia | bool %}

  theia:
    container_name: "${CTX_PREFIX_MAIN}theia"
    hostname: "theia"
    build:
      context: .
      dockerfile: "shared/containers/theia/Dockerfile"
      args:
        IMAGE: "{{ params.images.theia_image }}"
        VERSION: "{{ params.images.theia_version }}"
    restart: "unless-stopped"
    user: root

    {% if params.use_fluentd | bool %}

    depends_on:
    - "fluentd"

    {% endif %}

    networks:
    - "shared"
    volumes:
    - "$DATA_DIR/.git:/home/project/.git:ro"
    - "$DATA_DIR:/home/project/data:ro"
    - "$DATA_DIR/sync:/home/project/sync:cached"
    - "$DATA_DIR/action:/home/project/action:cached"

    {% if params.local | bool %}

    - "$DATA_DIR/log:/home/project/log:cached"
    - "$DATA_DIR/tmp:/home/project/tmp:cached"

    {% endif %}

    - "$DATA_DIR/tmp/theia:/tmp/main/theia"
    - "$DATA_DIR/tmp/tmp/theia:/tmp/main/tmp/theia"
    logging: *mainlog

    {% if (params.memory.theia | default('')) != '' %}

    mem_limit: "{{ params.memory.theia }}"

    {% endif %}

  {% endif %}

  {% if params.use_minio_gateway | bool %}

  minio_gateway:
    container_name: "${CTX_PREFIX_MAIN}minio_gateway"
    hostname: "minio_gateway"
    build:
      context: .
      dockerfile: "shared/containers/minio-gateway/Dockerfile"
      args:
        IMAGE: "{{ params.images.minio_gateway_image }}"
        VERSION: "{{ params.images.minio_gateway_version }}"
    restart: "unless-stopped"
    environment:
      MINIO_ACCESS_KEY: "$MINIO_GATEWAY_ACCESS_KEY"
      MINIO_SECRET_KEY: "$MINIO_GATEWAY_SECRET_KEY"

    {% if params.use_fluentd | bool %}

    depends_on:
    - "fluentd"

    {% endif %}

    networks:
    - "shared"
    volumes:
    - "$DATA_DIR/minio_gateway:/data"
    - "$DATA_DIR/tmp/minio_gateway:/tmp/main/minio_gateway"
    - "$DATA_DIR/tmp/tmp/minio_gateway:/tmp/main/tmp/minio_gateway"
    logging: *mainlog
    command: "gateway s3 '$MINIO_GATEWAY_ENDPOINT'"

    {% if (params.memory.minio_gateway | default('')) != '' %}

    mem_limit: "{{ params.memory.minio_gateway }}"

    {% endif %}

  {% endif %}

  {% if params.use_filestash | bool %}

  filestash:
    container_name: "${CTX_PREFIX_MAIN}filestash"
    hostname: "filestash"
    build:
      context: .
      dockerfile: "shared/containers/filestash/Dockerfile"
      args:
        IMAGE: "{{ params.images.filestash_image }}"
        VERSION: "{{ params.images.filestash_version }}"
    restart: "unless-stopped"

    {% if params.use_fluentd | bool %}

    depends_on:
    - "fluentd"

    {% endif %}

    networks:
    - "shared"
    volumes:
    - "$DATA_DIR/tmp/filestash:/tmp/main/filestash"
    - "$DATA_DIR/tmp/tmp/filestash:/tmp/main/tmp/filestash"
    logging: *mainlog

    {% if (params.memory.filestash | default('')) != '' %}

    mem_limit: "{{ params.memory.filestash }}"

    {% endif %}

  {% endif %}

  {% endif %}

  {% if params.pod_type in ['app', 'db'] %}

  elasticsearch:
    container_name: "${CTX_PREFIX_MAIN}elasticsearch"
    hostname: "elasticsearch"
    build:
      context: .
      dockerfile: "{{ params.main_dir }}/containers/elasticsearch/Dockerfile"
      args:
        IMAGE: "{{ params.images.elasticsearch_image }}"
        VERSION: "{{ params.images.elasticsearch_version }}"
        MAIN_DIR: "{{ params.main_dir }}"
        S3_ENDPOINT: "{{ params.backup_bucket_endpoint }}"
        S3_ACCESS_KEY: $S3_ACCESS_KEY
        S3_SECRET_KEY: $S3_SECRET_KEY
    restart: "unless-stopped"

    {% if params.use_fluentd | bool %}

    depends_on:
    - "fluentd"

    {% endif %}

    environment:
      cluster.initial_master_nodes: elasticsearch
      ES_JAVA_OPTS: "{{ params.elasticsearch_java_opts }}"

    {% if not (params.internal_elasticsearch | bool) %}

    ports:
    - "{{ params.elasticsearch_port }}:9200"

    {% endif %}

    networks:
    - "shared"

    {% if params.use_fluentd | bool %}

    - "log"

    {% endif %}

    volumes:

    {% if (params.local | bool) and (params.named_volumes | bool) %}

    - "elasticsearch:/usr/share/elasticsearch/data"

    {% else %}

    - "$DATA_DIR/elasticsearch:/usr/share/elasticsearch/data"

    {% endif %}

    - "$DATA_DIR/tmp/elasticsearch:/tmp/main/elasticsearch"
    - "$DATA_DIR/tmp/tmp/elasticsearch:/tmp/main/tmp/elasticsearch"

    ulimits:
      nofile:
        soft: 65535
        hard: 65535
      memlock:
        hard: -1
        soft: -1
    logging: *mainlog

    {% if (params.memory.elasticsearch | default('')) != '' %}

    mem_limit: "{{ params.memory.elasticsearch }}"

    {% endif %}

  {% endif %}

  toolbox:
    container_name: "${CTX_PREFIX_MAIN}toolbox"
    hostname: "toolbox"
    build:
      context: .
      dockerfile: "shared/containers/toolbox/Dockerfile"
      args:
        IMAGE: "{{ params.images.toolbox_image }}"
        VERSION: "{{ params.images.toolbox_version }}"
    restart: "unless-stopped"

    {% if params.use_fluentd | bool %}

    depends_on:
    - "fluentd"

    {% endif %}

    networks:
    - "shared"
    volumes:
    - "$DATA_DIR:/var/main/data"
    - "$DATA_DIR/tmp:/tmp/main"
    - "$DATA_DIR/log:/var/log/main"
    logging: *mainlog
    command: "tail -f /dev/null"

    {% if (params.memory.toolbox | default('')) != '' %}

    mem_limit: "{{ params.memory.toolbox }}"

    {% endif %}

  {% if params.use_fluentd | bool %}

  fluentd:
    container_name: "${CTX_PREFIX_MAIN}fluentd"
    hostname: "fluentd"
    build:
      context: .
      dockerfile: "shared/containers/fluentd/Dockerfile"
      args:
        IMAGE: "{{ params.images.fluentd_image }}"
        VERSION: "{{ params.images.fluentd_version }}"
        OUTPUT_PLUGIN: "{{ params.fluentd_output_plugin }}"
    restart: "unless-stopped"
    ports:
    - "{{ params.fluentd_port }}:24224"
    - "{{ params.fluentd_port }}:24224/udp"
    networks:
    - "log"

    {% if (params.pod_type == 'db') and (params.fluentd_output_plugin == 'elasticsearch') %}

    environment:
      ELASTICSEARCH_HOSTNAME: "elasticsearch"
      ELASTICSEARCH_PORT: "9200"

    {% endif %}

    {% if (params.pod_type != 'db') and (params.fluentd_output_plugin == 'elasticsearch') %}

    environment:
      ELASTICSEARCH_HOSTNAME: "{{ params.elasticsearch_host | urlsplit('hostname') }}"
      ELASTICSEARCH_PORT: "{{ params.elasticsearch_host | urlsplit('port') }}"

    {% endif %}

    volumes:
    - "$DATA_DIR/log/fluentd:/var/log/main/fluentd"
    - "$DATA_DIR/tmp/fluentd:/tmp/main/fluentd"
    - "$DATA_DIR/tmp/tmp/fluentd:/tmp/main/tmp/fluentd"
    logging: *jsonlog

    {% if (params.memory.fluentd | default('')) != '' %}

    mem_limit: "{{ params.memory.fluentd }}"

    {% endif %}

  {% endif %}