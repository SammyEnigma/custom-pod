
version: '2.4'

x-logging:
  mainlog: &mainlog
    driver: "json-file"
    options: 
      max-size: "50m"

networks:
  shared:
    external: true
    name: "${CTX_NAME}-network"

volumes:
  mongo_db: {}
  mongo_dump: {}

services:
  nginx:
    container_name: "${CTX_NAME}-main-nginx"
    hostname: "nginx"
    build: 
      context: .
      dockerfile: "main/nginx/Dockerfile"
      args:
        IMAGE: $NGINX_IMAGE
        VERSION: $NGINX_VERSION
        PERL_VERSION: $PERL_VERSION
        MAIN_DOMAIN: $MAIN_DOMAIN
        MAIN_DOMAIN_PORT: $MAIN_DOMAIN_PORT
        MAIN_DOMAIN_PORT_SUFFIX: $MAIN_DOMAIN_PORT_SUFFIX
    restart: "unless-stopped"
    depends_on:
    - "rocketchat"
    ports:
    - "$NGINX_HTTP_PORT:80"
    - "$NGINX_HTTPS_PORT:443"
    networks:
    - "shared"
    volumes: 
    - "$DATA_DIR/tmp/nginx:/tmp/main/nginx"
    logging: *mainlog
    mem_limit: $CONTAINER_MEM_NGINX

  rocketchat:
    container_name: "${CTX_NAME}-main-rocketchat"
    hostname: "rocketchat"
    build: 
      context: .
      dockerfile: "main/rocketchat/Dockerfile"
      args:
        IMAGE: $ROCKETCHAT_IMAGE
        VERSION: $ROCKETCHAT_VERSION
    command: >
      bash -c
        "for i in `seq 1 30`; do
          node main.js &&
          s=$$? && break || s=$$?;
          echo \"Tried $$i times. Waiting 5 secs...\";
          sleep 5;
        done; (exit $$s)"
    restart: "unless-stopped"
    environment:
      - PORT=3000
      - ROOT_URL=http://localhost:3000
      - MONGO_URL=mongodb://mongo:27017/rocketchat
      - MONGO_OPLOG_URL=mongodb://mongo:27017/local
      - MAIL_URL=smtp://smtp.email
    depends_on:
      - mongo
    networks:
    - "shared"
    volumes:
      - "$DATA_DIR/rocketchat/uploads:/app/uploads"
    logging: *mainlog
    mem_limit: $CONTAINER_MEM_ROCKETCHAT

  mongo:
    container_name: "${CTX_NAME}-main-mongo"
    hostname: "mongo"
    build: 
      context: .
      dockerfile: "main/mongo/Dockerfile"
      args:
        IMAGE: $MONGO_IMAGE
        VERSION: $MONGO_VERSION
    restart: "unless-stopped"
    networks:
    - "shared"
    volumes:
      - "mongo_db:/data/db"
      - "mongo_dump:/dump"
    command: mongod --smallfiles --oplogSize 128 --replSet rs0 --storageEngine=mmapv1
    mem_limit: $CONTAINER_MEM_MONGO

  # # hubot, the popular chatbot (add the bot user first and change the password before starting this image)
  # hubot:
  # image: "$hubot_IMAGE:$hubot_VERSION"
  #   restart: unless-stopped
  #   environment:
  #     - ROCKETCHAT_URL=rocketchat:3000
  #     - ROCKETCHAT_ROOM=GENERAL
  #     - ROCKETCHAT_USER=bot
  #     - ROCKETCHAT_PASSWORD=botpassword
  #     - BOT_NAME=bot
  # # you can add more scripts as you'd like here, they need to be installable by npm
  #     - EXTERNAL_SCRIPTS=hubot-help,hubot-seen,hubot-links,hubot-diagnostics
  #   depends_on:
  #     - rocketchat
  #   labels:
  #     - "traefik.enable=false"
  #   volumes:
  #     - ./scripts:/home/hubot/scripts
  # # this is used to expose the hubot port for notifications on the host on port 3001, e.g. for hubot-jenkins-notifier
  #   ports:
  #     - 3001:8080
    
  toolbox:
    container_name: "${CTX_NAME}-main-toolbox"
    hostname: "toolbox"
    build: 
      context: .
      dockerfile: "main/toolbox/Dockerfile"
      args:
        IMAGE: $TOOLBOX_IMAGE
        VERSION: $TOOLBOX_VERSION
    restart: "unless-stopped"
    networks:
    - "shared"
    volumes: 
    - "$DATA_DIR:/var/main/data"
    - "$DATA_DIR/tmp:/tmp/main"
    - "$DATA_DIR/log:/var/log/main"
    logging: *mainlog
    command: "tail -f /dev/null"
    mem_limit: $CONTAINER_MEM_TOOLBOX