version: '2.4'

x-logging:
  mainlog: &mainlog
    driver: "fluentd"
    options:
      tag: "docker.{{.Name}}.{{.ID}}"
      fluentd-address: "localhost:$FLUENTD_PORT"
  jsonlog: &jsonlog
    driver: "json-file"
    options:
      max-size: "50m"

networks:
  shared:
    external: true
    name: "${CTX_NAME}-network"

services:
  nginx:
    container_name: "${CTX_NAME}-main-nginx"
    hostname: "nginx"
    build:
      context: ..
      dockerfile: "main/nginx/Dockerfile"
      args:
        IMAGE: $NGINX_IMAGE
        VERSION: $NGINX_VERSION
    restart: "unless-stopped"
    depends_on:
    - "fluentd"
    - "rocketchat"
    - "mongo-express"
    ports:
    - "$PUBLIC_HTTP_PORT:80"
    - "$PUBLIC_HTTPS_PORT:443"
    - "$PRIVATE_HTTP_PORT:9080"
    - "$PRIVATE_HTTPS_PORT:9443"
    networks:
    - "shared"
    volumes:
    - "$DATA_DIR/sync/certbot/etc/live:/etc/ssl:ro"
    - "$DATA_DIR/sync/certbot/www:/var/www/certbot:ro"
    - "$DATA_DIR/tmp/nginx:/tmp/main/nginx"
    logging: *mainlog
    mem_limit: $CONTAINER_MEM_NGINX

  rocketchat:
    container_name: "${CTX_NAME}-main-rocketchat"
    hostname: "rocketchat"
    build:
      context: ..
      dockerfile: "main/rocketchat/Dockerfile"
      args:
        IMAGE: $ROCKETCHAT_IMAGE
        VERSION: $ROCKETCHAT_VERSION
    command: >
      bash -c
        "for i in `seq 1 30`; do
          node main.js &&
          s=$$? && break || s=$$?;
          echo \"Tried $$i times. Waiting 5 secs...\";
          sleep 5;
        done; (exit $$s)"
    restart: "unless-stopped"
    environment:
    - PORT=3000
    - ROOT_URL=http://localhost:3000
    - MONGO_URL=mongodb://$DB_USER:$DB_PASSWORD@mongo:27017/$DB_NAME?authSource=admin
    - MONGO_OPLOG_URL=mongodb://oploguser:$DB_OPLOG_PASSWORD@mongo:27017/local?authSource=admin
    - MAIL_URL=smtp://smtp.email
    depends_on:
    - "fluentd"
    networks:
    - "shared"
    volumes:
    - "$DATA_DIR/rocketchat/uploads:/app/uploads"
    logging: *mainlog
    mem_limit: $CONTAINER_MEM_ROCKETCHAT

  # hubot, the popular chatbot (add the bot user first and change the password before starting this image)
  hubot:
    container_name: "${CTX_NAME}-main-hubot"
    hostname: "hubot"
    build:
      context: ..
      dockerfile: "main/$HUBOT_DIR/Dockerfile"
      args:
        IMAGE: $HUBOT_IMAGE
        VERSION: $HUBOT_VERSION
    restart: unless-stopped
    depends_on:
    - "fluentd"
    - "rocketchat"
    environment:
    - ROCKETCHAT_URL=rocketchat:3000
    - LISTEN_ON_ALL_PUBLIC=true
    - ROCKETCHAT_ROOM=$HUBOT_ROOM
    - ROCKETCHAT_USER=$HUBOT_USER
    - ROCKETCHAT_PASSWORD=$HUBOT_PASSWORD
    - BOT_NAME=$HUBOT_BOT_NAME
    - EXTERNAL_SCRIPTS=hubot-help,hubot-seen,hubot-links,hubot-diagnostics
    networks:
    - "shared"
    depends_on:
    - rocketchat
    volumes:
    - "$DATA_DIR/hubot/scripts:/home/hubot/scripts"

  toolbox:
    container_name: "${CTX_NAME}-main-toolbox"
    hostname: "toolbox"
    build:
      context: ..
      dockerfile: "main/toolbox/Dockerfile"
      args:
        IMAGE: $TOOLBOX_IMAGE
        VERSION: $TOOLBOX_VERSION
    restart: "unless-stopped"
    depends_on:
    - "fluentd"
    networks:
    - "shared"
    volumes:
    - "$DATA_DIR:/var/main/data"
    - "$DATA_DIR/tmp:/tmp/main"
    - "$DATA_DIR/log:/var/log/main"
    logging: *mainlog
    command: "tail -f /dev/null"
    mem_limit: $CONTAINER_MEM_TOOLBOX

  fluentd:
    container_name: "${CTX_NAME}-main-fluentd"
    hostname: "fluentd"
    build:
      context: ..
      dockerfile: "main/fluentd/Dockerfile"
      args:
        IMAGE: $FLUENTD_IMAGE
        VERSION: $FLUENTD_VERSION
        OUTPUT_PLUGIN: $FLUENTD_OUTPUT_PLUGIN
    restart: "unless-stopped"
    ports:
    - "$FLUENTD_PORT:24224"
    - "$FLUENTD_PORT:24224/udp"
    networks:
    - "log"
    volumes:
    - "$DATA_DIR/log/fluentd:/var/log/main/fluentd"
    logging: *jsonlog
    mem_limit: $CONTAINER_MEM_FLUENTD