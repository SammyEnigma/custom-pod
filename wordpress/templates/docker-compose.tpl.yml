version: '2.4'

x-logging:

  {% if params.use_fluentd | bool %}

  mainlog: &mainlog
    driver: "fluentd"
    options:
      tag: "{% raw %}docker.{{.Name}}{% endraw %}"
      fluentd-address: "localhost:$FLUENTD_PORT"
  jsonlog: &jsonlog
    driver: "json-file"
    options:
      max-size: "50m"

  {% else %}

  mainlog: &mainlog
    driver: "json-file"
    options:
      max-size: "50m"

  {% endif %}

networks:

  {% if params.use_fluentd | bool %}

  log:
    driver: "bridge"

  {% endif %}

  shared:
    external: true
    name: "${CTX_NAME}-network"

{% if (params.local | bool) and (not (params.external_volumes | bool)) %}

volumes:
  mysql: {}

  {% if params.use_nextcloud | bool %}

  nextcloud: {}

  {% endif %}

{% endif %}

services:

  {% if params.pod_type in ['app', 'web'] %}

  nginx:
    container_name: "${CTX_PREFIX_MAIN}nginx"
    hostname: "nginx"
    build:
      context: .
      dockerfile: "shared/containers/nginx/Dockerfile"
      args:
        IMAGE: "{{ params.images.nginx_image }}"
        VERSION: "{{ params.images.nginx_version }}"
    restart: "unless-stopped"
    depends_on:

    {% if params.use_varnish | bool %}

    - "varnish"

    {% else %}

    - "wordpress"

    {% endif %}

    {% if params.use_pma | bool %}

    - "phpmyadmin"

    {% endif %}

    {% if params.use_adminer | bool %}

    - "adminer"

    {% endif %}

    {% if params.use_theia | bool %}

    - "theia"

    {% endif %}

    {% if params.use_minio_gateway | bool %}

    - "minio_gateway"

    {% endif %}

    {% if params.use_filestash | bool %}

    - "filestash"

    {% endif %}

    {% if params.use_nextcloud | bool %}

    - "nextcloud"

    {% endif %}

    {% if params.use_fluentd | bool %}

    - "fluentd"

    {% endif %}

    ports:
    - "$PUBLIC_HTTP_PORT:80"
    - "$PUBLIC_HTTPS_PORT:443"
    - "$PRIVATE_HTTP_PORT:9080"
    - "$PRIVATE_HTTPS_PORT:9443"
    networks:
    - "shared"
    volumes:
    - "$DATA_DIR/sync/certbot/etc:/etc/ssl:ro"
    - "$DATA_DIR/sync/certbot/www:/var/www/certbot:ro"
    - "$DATA_DIR/sync/nginx:/var/main/data/sync/nginx:ro"
    - "$DATA_DIR/tmp/nginx:/tmp/main/nginx"
    - "$DATA_DIR/tmp/tmp/nginx:/tmp/main/tmp/nginx"
    logging: *mainlog

    {% if (params.memory.nginx | default('')) != '' %}

    mem_limit: "{{ params.memory.nginx }}"

    {% endif %}

  {% if params.use_varnish | bool %}

  varnish:
    container_name: "${CTX_PREFIX_MAIN}varnish"
    hostname: "varnish"
    build:
      context: .
      dockerfile: "shared/containers/varnish/Dockerfile"
      args:
        IMAGE: "{{ params.images.varnish_image }}"
        VERSION: "{{ params.images.varnish_version }}"
    restart: "unless-stopped"

    {% if params.use_fluentd | bool %}

    depends_on:
    - "fluentd"

    {% endif %}

    networks:
    - "shared"
    volumes:
    - "$DATA_DIR/tmp/varnish:/tmp/main/varnish"
    - "$DATA_DIR/tmp/tmp/varnish:/tmp/main/tmp/varnish"
    ulimits:
      nofile:
        soft: 131072
        hard: 131072
      memlock:
        hard: 82000
        soft: 82000
    logging: *mainlog

    {% if (params.memory.varnish | default('')) != '' %}

    mem_limit: "{{ params.memory.varnish }}"

    {% endif %}

  {% endif %}

  wordpress:
    container_name: "${CTX_PREFIX_MAIN}wordpress"
    hostname: "wordpress"
    build:
      context: .
      dockerfile: "wordpress/containers/wordpress/Dockerfile"
      args:
        IMAGE: "{{ params.images.wordpress_image }}"
        VERSION: "{{ params.images.wordpress_version }}"
        WORDPRESS_INI_FILE_TYPE: $WORDPRESS_INI_FILE_TYPE
    restart: "unless-stopped"
    environment:
      DB_HOST: mysql
      DB_NAME: $DB_NAME
      DB_USER: $DB_USER

    {% if (params.use_fluentd | bool) or (params.pod_type == 'app') %}

    depends_on:

    {% if params.use_fluentd | bool %}

    - "fluentd"

    {% endif %}

    {% if params.pod_type == 'app' %}

    {% if params.use_memcached | bool %}

    - "memcached"

    {% endif %}

    - "mysql"

    {% endif %}

    {% endif %}

    networks:
    - "shared"
    volumes:
    - "$DATA_DIR/wordpress/uploads:/var/www/html/web/app/uploads"
    - "$DATA_DIR/tmp/wordpress:/tmp/main/wordpress"
    - "$DATA_DIR/tmp/tmp/wordpress:/tmp/main/tmp/wordpress"

    {% if (params.local | bool) and (params.wp_dev | bool) %}

    - "$WP_APP_REPO_DIR:/var/www/html"

    {% endif %}

    logging: *mainlog

    {% if (params.memory.wordpress | default('')) != '' %}

    mem_limit: "{{ params.memory.wordpress }}"

    {% endif %}

  {% if params.use_pma | bool %}

  phpmyadmin:
    container_name: "${CTX_PREFIX_MAIN}phpmyadmin"
    hostname: "phpmyadmin"
    build:
      context: .
      dockerfile: "shared/containers/phpmyadmin/Dockerfile"
      args:
        IMAGE: "{{ params.images.pma_image }}"
        VERSION: "{{ params.images.pma_version }}"
        PERL_VERSION: $PERL_VERSION
        LOGIN_COOKIE_VALIDITY: $PMA_LOGIN_COOKIE_VALIDITY
    restart: "unless-stopped"
    environment:
      PMA_HOST: mysql
      PMA_PORT: $DB_PORT
      PMA_USER: $PMA_USER
      PMA_PASSWORD: $PMA_PASSWORD

    {% if params.use_fluentd | bool %}

    depends_on:
    - "fluentd"

    {% endif %}

    networks:
    - "shared"
    volumes:
    - "$DATA_DIR/tmp/phpmyadmin:/tmp/main/phpmyadmin"
    - "$DATA_DIR/tmp/tmp/phpmyadmin:/tmp/main/tmp/phpmyadmin"
    logging: *mainlog

    {% if (params.memory.phpmyadmin | default('')) != '' %}

    mem_limit: "{{ params.memory.phpmyadmin }}"

    {% endif %}

  {% endif %}

  {% if params.use_adminer | bool %}

  adminer:
    container_name: "${CTX_PREFIX_MAIN}adminer"
    hostname: "adminer"
    build:
      context: .
      dockerfile: "shared/containers/adminer/Dockerfile"
      args:
        IMAGE: "{{ params.images.adminer_image }}"
        VERSION: "{{ params.images.adminer_version }}"
    restart: "unless-stopped"
    environment:
      ADMINER_DRIVER: server
      ADMINER_SERVER: mysql
      ADMINER_DB: $DB_NAME
      ADMINER_USERNAME: $ADMINER_USER
      ADMINER_PASSWORD: $ADMINER_PASSWORD
      ADMINER_AUTOLOGIN: 1

    {% if params.use_fluentd | bool %}

    depends_on:
    - "fluentd"

    {% endif %}

    networks:
    - "shared"
    volumes:
    - "$DATA_DIR/tmp/adminer:/tmp/main/adminer"
    - "$DATA_DIR/tmp/tmp/adminer:/tmp/main/tmp/adminer"
    logging: *mainlog

    {% if (params.memory.adminer | default('')) != '' %}

    mem_limit: "{{ params.memory.adminer }}"

    {% endif %}

  {% endif %}

  {% if params.use_theia | bool %}

  theia:
    container_name: "${CTX_PREFIX_MAIN}theia"
    hostname: "theia"
    build:
      context: .
      dockerfile: "shared/containers/theia/Dockerfile"
      args:
        IMAGE: "{{ params.images.theia_image }}"
        VERSION: "{{ params.images.theia_version }}"
    restart: "unless-stopped"
    user: root

    {% if params.use_fluentd | bool %}

    depends_on:
    - "fluentd"

    {% endif %}

    networks:
    - "shared"
    volumes:
    - "$DATA_DIR/.git:/home/project/.git:ro"
    - "$DATA_DIR:/home/project/data:ro"
    - "$DATA_DIR/sync:/home/project/sync:cached"
    - "$DATA_DIR/action:/home/project/action:cached"

    {% if params.local | bool %}

    - "$DATA_DIR/log:/home/project/log:cached"
    - "$DATA_DIR/tmp:/home/project/tmp:cached"

    {% endif %}

    - "$DATA_DIR/tmp/theia:/tmp/main/theia"
    - "$DATA_DIR/tmp/tmp/theia:/tmp/main/tmp/theia"
    logging: *mainlog

    {% if (params.memory.theia | default('')) != '' %}

    mem_limit: "{{ params.memory.theia }}"

    {% endif %}

  {% endif %}

  {% if params.use_minio_gateway | bool %}

  minio_gateway:
    container_name: "${CTX_PREFIX_MAIN}minio_gateway"
    hostname: "minio_gateway"
    build:
      context: .
      dockerfile: "shared/containers/minio-gateway/Dockerfile"
      args:
        IMAGE: "{{ params.images.minio_gateway_image }}"
        VERSION: "{{ params.images.minio_gateway_version }}"
    restart: "unless-stopped"
    environment:
      MINIO_ACCESS_KEY: "$MINIO_GATEWAY_ACCESS_KEY"
      MINIO_SECRET_KEY: "$MINIO_GATEWAY_SECRET_KEY"

    {% if params.use_fluentd | bool %}

    depends_on:
    - "fluentd"

    {% endif %}

    networks:
    - "shared"
    volumes:
    - "$DATA_DIR/tmp/minio_gateway:/tmp/main/minio_gateway"
    - "$DATA_DIR/tmp/tmp/minio_gateway:/tmp/main/tmp/minio_gateway"
    logging: *mainlog
    command: "gateway s3 '$MINIO_GATEWAY_ENDPOINT'"

    {% if (params.memory.minio_gateway | default('')) != '' %}

    mem_limit: "{{ params.memory.minio_gateway }}"

    {% endif %}

  {% endif %}

  {% if params.use_filestash | bool %}

  filestash:
    container_name: "${CTX_PREFIX_MAIN}filestash"
    hostname: "filestash"
    build:
      context: .
      dockerfile: "shared/containers/filestash/Dockerfile"
      args:
        IMAGE: "{{ params.images.filestash_image }}"
        VERSION: "{{ params.images.filestash_version }}"
    restart: "unless-stopped"

    {% if params.use_fluentd | bool %}

    depends_on:
    - "fluentd"

    {% endif %}

    networks:
    - "shared"
    volumes:
    - "$DATA_DIR/tmp/filestash:/tmp/main/filestash"
    - "$DATA_DIR/tmp/tmp/filestash:/tmp/main/tmp/filestash"
    logging: *mainlog

    {% if (params.memory.filestash | default('')) != '' %}

    mem_limit: "{{ params.memory.filestash }}"

    {% endif %}

  {% endif %}

  {% if params.use_nextcloud | bool %}

  nextcloud:
    container_name: "${CTX_PREFIX_MAIN}nextcloud"
    hostname: "nextcloud"
    build:
      context: .
      dockerfile: "shared/containers/nextcloud/Dockerfile"
      args:
        IMAGE: "{{ params.images.nextcloud_image }}"
        VERSION: "{{ params.images.nextcloud_version }}"
    restart: "unless-stopped"

    {% if params.use_fluentd | bool %}

    depends_on:
    - "fluentd"

    {% endif %}

    networks:
    - "shared"
    volumes:

    {% if (params.local | bool) and (not (params.external_volumes | bool)) %}

    - "nextcloud:/var/www/html"

    {% else %}

    - "$DATA_DIR/nextcloud:/var/www/html"

    {% endif %}

    - "$DATA_DIR:/var/main/data:ro"
    - "$DATA_DIR/sync:/var/main/data/sync"
    - "$DATA_DIR/action:/var/main/data/action"
    - "$DATA_DIR/tmp/nextcloud:/tmp/main/nextcloud"
    - "$DATA_DIR/tmp/tmp/nextcloud:/tmp/main/tmp/nextcloud"
    logging: *mainlog

    {% if (params.memory.nextcloud | default('')) != '' %}

    mem_limit: "{{ params.memory.nextcloud }}"

    {% endif %}

  {% endif %}

  {% endif %}

  {% if params.pod_type in ['app', 'cache'] %}

  {% if params.use_redis | bool %}

  redis:
    container_name: "${CTX_PREFIX_MAIN}redis"
    hostname: "redis"
    build:
      context: .
      dockerfile: "shared/containers/redis/Dockerfile"
      args:
        IMAGE: "{{ params.images.redis_image }}"
        VERSION: "{{ params.images.redis_version }}"
    restart: "unless-stopped"

    {% if params.use_fluentd | bool %}

    depends_on:
    - "fluentd"

    {% endif %}

    networks:
    - "shared"

    {% if params.pod_type in ['cache'] %}

    ports:
    - "6379:6379"

    {% endif %}

    volumes:
    - "$DATA_DIR/tmp/redis:/tmp/main/redis"
    - "$DATA_DIR/tmp/tmp/redis:/tmp/main/tmp/redis"
    logging: *mainlog

    {% if (params.memory.redis | default('')) != '' %}

    mem_limit: "{{ params.memory.redis }}"

    {% endif %}

  {% endif %}

  {% if params.use_memcached | bool %}

  memcached:
    container_name: "${CTX_PREFIX_MAIN}memcached"
    hostname: "memcached"
    build:
      context: .
      dockerfile: "shared/containers/memcached/Dockerfile"
      args:
        IMAGE: "{{ params.images.memcached_image }}"
        VERSION: "{{ params.images.memcached_version }}"
    restart: "unless-stopped"

    {% if params.use_fluentd | bool %}

    depends_on:
    - "fluentd"

    {% endif %}

    networks:
    - "shared"

    {% if params.pod_type in ['cache'] %}

    ports:
    - "11211:11211"

    {% endif %}

    volumes:
    - "$DATA_DIR/tmp/memcached:/tmp/main/memcached"
    - "$DATA_DIR/tmp/tmp/memcached:/tmp/main/tmp/memcached"
    logging: *mainlog

    {% if (params.memory.memcached | default('')) != '' %}

    mem_limit: "{{ params.memory.memcached }}"

    {% endif %}

  {% endif %}

  {% endif %}

  {% if params.pod_type in ['app', 'db'] %}

  mysql:
    container_name: "${CTX_PREFIX_MAIN}mysql"
    hostname: "mysql"
    build:
      context: .
      dockerfile: "shared/containers/mysql/Dockerfile"
      args:
        IMAGE: "{{ params.images.mysql_image }}"
        VERSION: "{{ params.images.mysql_version }}"
    restart: "unless-stopped"
    environment:
      MYSQL_ROOT_PASSWORD: "$MYSQL_ROOT_PASSWORD"
      MYSQL_DATABASE: "$DB_NAME"

    {% if params.use_fluentd | bool %}

    depends_on:
    - "fluentd"

    {% endif %}

    networks:
    - "shared"

    {% if params.pod_type in ['db'] %}

    ports:
    - "3306:3306"

    {% endif %}

    volumes:

    {% if (params.local | bool) and (not (params.external_volumes | bool)) %}

    - "mysql:/var/lib/mysql"

    {% else %}

    - "$DATA_DIR/mysql:/var/lib/mysql"

    {% endif %}

    - "$DATA_DIR/tmp/mysql:/tmp/main/mysql"
    - "$DATA_DIR/tmp/tmp/mysql:/tmp/main/tmp/mysql"
    - "$DATA_DIR/tmp/log/mysql:/tmp/main/log/mysql"
    logging: *mainlog

    {% if (params.memory.mysql | default('')) != '' %}

    mem_limit: "{{ params.memory.mysql }}"

    {% endif %}

  {% endif %}

  toolbox:
    container_name: "${CTX_PREFIX_MAIN}toolbox"
    hostname: "toolbox"
    build:
      context: .
      dockerfile: "shared/containers/toolbox/Dockerfile"
      args:
        IMAGE: "{{ params.images.toolbox_image }}"
        VERSION: "{{ params.images.toolbox_version }}"
    restart: "unless-stopped"

    {% if params.use_fluentd | bool %}

    depends_on:
    - "fluentd"

    {% endif %}

    networks:
    - "shared"
    volumes:
    - "$DATA_DIR:/var/main/data"
    - "$DATA_DIR/tmp:/tmp/main"
    - "$DATA_DIR/log:/var/log/main"
    logging: *mainlog
    command: "tail -f /dev/null"

    {% if (params.memory.toolbox | default('')) != '' %}

    mem_limit: "{{ params.memory.toolbox }}"

    {% endif %}

  {% if params.local | bool %}

  {% if params.use_composer | bool %}

  composer:
    container_name: "${CTX_PREFIX_MAIN}composer"
    hostname: "composer"
    build:
      context: .
      dockerfile: "shared/containers/composer/Dockerfile"
      args:
        IMAGE: "{{ params.images.composer_image }}"
        VERSION: "{{ params.images.composer_version }}"
    restart: "unless-stopped"

    {% if params.use_fluentd | bool %}

    depends_on:
    - "fluentd"

    {% endif %}

    volumes:
    - "$WP_APP_REPO_DIR:/var/www/html"
    - "$DATA_DIR/tmp/composer:/tmp/main/composer"
    - "$DATA_DIR/tmp/tmp/composer:/tmp/main/tmp/composer"
    logging: *mainlog
    command: "tail -f /dev/null"
    working_dir: "/var/www/html"

    {% if (params.memory.composer | default('')) != '' %}

    mem_limit: "{{ params.memory.composer }}"

    {% endif %}

  {% endif %}

  {% endif %}

  {% if params.use_fluentd | bool %}

  fluentd:
    container_name: "${CTX_PREFIX_MAIN}fluentd"
    hostname: "fluentd"
    build:
      context: .
      dockerfile: "shared/containers/fluentd/Dockerfile"
      args:
        IMAGE: "{{ params.images.fluentd_image }}"
        VERSION: "{{ params.images.fluentd_version }}"
        OUTPUT_PLUGIN: $FLUENTD_OUTPUT_PLUGIN
    restart: "unless-stopped"
    ports:
    - "$FLUENTD_PORT:24224"
    - "$FLUENTD_PORT:24224/udp"
    networks:
    - "log"
    volumes:
    - "$DATA_DIR/log/fluentd:/var/log/main/fluentd"
    - "$DATA_DIR/tmp/fluentd:/tmp/main/fluentd"
    - "$DATA_DIR/tmp/tmp/fluentd:/tmp/main/tmp/fluentd"
    logging: *jsonlog

    {% if (params.memory.fluentd | default('')) != '' %}

    mem_limit: "{{ params.memory.fluentd }}"

    {% endif %}

  {% endif %}