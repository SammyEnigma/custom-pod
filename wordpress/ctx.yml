## general vars - start ###

{% set var_local = params.main.local | default(false) | bool %}
{% set var_run = params.main.run | default({}) %}
{% set var_run_tasks = params.main.run_tasks | default({}) %}
{% set var_run_dict = params.main.run_dict | default({}) %}
{% set var_run_tasks_dict = params.main.run_tasks_dict | default({}) %}

## general vars - end ###

### others ###

{% set var_pod_type = params.main.type | default('') %}

{% if not (var_pod_type in ['app', 'web', 'db']) %}
  {% set error = {} %}
  {{ error['error.pod_type.invalid.' + var_pod_type] }}
{% endif %}

{% set var_main_base_dir = params.main.custom_dir %}
{% set var_main_dir = var_main_base_dir + '/wordpress' %}
{% set var_shared_dir = var_main_base_dir + '/shared' %}

{% set var_pod_dir_rel = '..' %}
{% set var_data_dir = var_local
  | ternary(var_pod_dir_rel + '/' + params.pod.data_dir, params.pod.data_dir)
%}

{% set var_main_domain_port = params.main.custom_domain.main_ssl | bool |
  ternary(params.main.custom_domain.public_https_port, params.main.custom_domain.public_http_port)
%}

{% if params.main.use_pma | bool %}
  {% set var_pma_domain_port = params.main.custom_domain.pma_ssl | bool |
    ternary(params.main.custom_domain.private_https_port, params.main.custom_domain.private_http_port)
  %}
{% endif %}

{% if params.main.use_adminer | bool %}
  {% set var_adminer_domain_port = params.main.custom_domain.adminer_ssl | bool |
    ternary(params.main.custom_domain.private_https_port, params.main.custom_domain.private_http_port)
  %}
{% endif %}

{% if params.main.use_theia | bool %}
  {% set var_theia_domain_port = params.main.custom_domain.theia_ssl | bool |
    ternary(params.main.custom_domain.private_https_port, params.main.custom_domain.private_http_port)
  %}
{% endif %}

{% if params.main.use_minio_gateway | bool %}
  {% set var_minio_gateway_domain_port = params.main.custom_domain.minio_gateway_ssl | bool |
    ternary(params.main.custom_domain.private_https_port, params.main.custom_domain.private_http_port)
  %}
{% endif %}

{% if params.main.use_filestash | bool %}
  {% set var_filestash_domain_port = params.main.custom_domain.filestash_ssl | bool |
    ternary(params.main.custom_domain.private_https_port, params.main.custom_domain.private_http_port)
  %}
{% endif %}

{% if params.main.use_nextcloud | bool %}
  {% set var_nextcloud_domain_port = params.main.custom_domain.nextcloud_ssl | bool |
    ternary(params.main.custom_domain.private_https_port, params.main.custom_domain.private_http_port)
  %}
{% endif %}

### main ###

env_files:

- when: false

{% if var_pod_type in ['app', 'web'] %}

- src: "{{ params.main.auth_file }}"
  dest: "{{ var_main_base_dir }}/env/nginx/conf/.htpasswd"
  root: true

{% endif %}

templates:

{% set var_ctx_full_name = params.env_name  + '-' + params.ctx_name + '-' + params.pod.name %}
{% set var_ctx_prefix_main = params.main.use_prefix | bool
  | ternary(var_ctx_full_name + '-main', '')
%}
{% set var_ctx_prefix_run = params.main.use_prefix | bool
  | ternary(var_ctx_full_name + '-run', '')
%}

- src: "{{ var_main_dir }}/templates/docker-compose.tpl.yml"
  dest: "{{ var_main_base_dir }}/docker-compose.yml"
  root: true
  params:
    local: "{{ var_local | default(false) | bool | ternary('true', 'false') }}"
    pod_type: "{{ var_pod_type }}"
    use_fluentd: "{{ params.main.use_fluentd }}"
    external_volumes: "{{ params.main.external_volumes | default('false') }}"
    images: {{ params.main.custom_images | to_json }}
    memory: {{ params.main.custom_memory | to_json }}

    {% if var_pod_type in ['app', 'web'] %}

    use_pma: "{{ params.main.use_pma }}"
    use_adminer: "{{ params.main.use_adminer }}"
    use_theia: "{{ params.main.use_theia }}"
    use_minio_gateway: "{{ params.main.use_minio_gateway }}"
    use_filestash: "{{ params.main.use_filestash }}"
    use_nextcloud: "{{ params.main.use_nextcloud }}"

    {% if var_local %}

    use_composer: "{{ params.main.use_composer }}"

    {% endif %}

    {% endif %}

- src: "{{ var_main_dir }}/templates/docker-compose.tpl.run.yml"
  dest: "{{ var_main_base_dir }}/docker-compose.run.yml"
  root: true
  params:
    local: "{{ var_local | default(false) | bool | ternary('true', 'false') }}"
    pod_type: "{{ var_pod_type }}"
    use_fluentd: "{{ params.main.use_fluentd }}"
    images: {{ params.main.custom_images | to_json }}
    memory: {{ params.main.custom_memory | to_json }}

    {% if var_pod_type in ['app', 'web'] %}

    use_certbot: "{{ params.main.use_certbot }}"

    {% endif %}

- src: "{{ var_main_dir }}/templates/docker-compose.env"
  dest: "{{ var_main_base_dir }}/.env"
  root: true
  params:
    ctx_full_name: "{{ var_ctx_full_name }}"
    ctx_prefix_main: "{{ var_ctx_prefix_main }}"
    ctx_prefix_run: "{{ var_ctx_prefix_run }}"
    data_dir: "{{ var_data_dir }}"
    local: "{{ var_local | default(false) | bool | ternary('true', 'false') }}"
    type: "{{ var_pod_type }}"
    use_fluentd: "{{ params.main.use_fluentd }}"
    db_host: "{{ params.main.custom_args.mysql.host }}"
    db_port: "{{ params.main.custom_args.mysql.port }}"
    db_name: "{{ params.credentials.wordpress.db.name }}"
    db_user: "{{ params.credentials.wordpress.db.user }}"
    db_password: "{{ params.credentials.wordpress.db.password }}"
    s3_backup_access_key: "{{ params.credentials.wp_backup_bucket.access_key }}"
    s3_backup_secret_key: "{{ params.credentials.wp_backup_bucket.secret_key }}"

    {% if var_pod_type in ['app', 'web'] %}

    {% set var_apps_dir_base = params.dirs.apps_dir_base %}
    {% set var_app_repo_dir = var_pod_dir_rel + '/' + var_apps_dir_base + '/' +
      (params.pod.app.wp_local.dir_rel | default(''))
    %}

    public_http_port: "{{ params.main.custom_domain.public_http_port }}"
    public_https_port: "{{ params.main.custom_domain.public_https_port }}"
    private_http_port: "{{ params.main.custom_domain.private_http_port }}"
    private_https_port: "{{ params.main.custom_domain.private_https_port }}"
    s3_uploads_access_key: "{{ params.credentials.wp_uploads_bucket.access_key }}"
    s3_uploads_secret_key: "{{ params.credentials.wp_uploads_bucket.secret_key }}"
    wordpress_ini_file_type: >-
      {{
      (params.main.custom_args.wordpress.env == 'production') |
      ternary('production', 'development')
      }}
    wp_app_repo_dir: "{{ var_local | default(false) | bool | ternary(var_app_repo_dir, '') }}"
    use_certbot: "{{ params.main.use_certbot }}"
    use_minio_gateway: "{{ params.main.use_minio_gateway }}"

    {% if params.main.use_minio_gateway | bool %}

    minio_gateway_endpoint: "{{ params.credentials.minio_gateway.endpoint }}"
    minio_gateway_access_key: "{{ params.credentials.minio_gateway.access_key }}"
    minio_gateway_secret_key: "{{ params.credentials.minio_gateway.secret_key }}"

    {% endif %}

    use_pma: "{{ params.main.use_pma }}"

    {% if params.main.use_pma | bool %}

    pma_user: "root"
    pma_password: "{{ params.credentials.mysql.root_password }}"
    pma_login_cookie_validity: >-
      {{ params.main.custom_args.wordpress.pma.login_cookie_validity | default('36000') }}

    {% endif %}

    use_adminer: "{{ params.main.use_adminer }}"

    {% if params.main.use_adminer | bool %}

    adminer_user: "root"
    adminer_password: "{{ params.credentials.mysql.root_password }}"

    {% endif %}

    {% endif %}

    {% if var_pod_type in ['app', 'db'] %}

    mysql_root_password: "{{ params.credentials.mysql.root_password }}"

    {% endif %}

    {% if var_pod_type in ['web'] %}

    {% if not var_local %}

    mysql_host_ip: ""

    {% else %}

    mysql_host_ip: "{{ params.dependencies_node_ip_dict['mysql'] }}"

    {% endif %}

    {% endif %}

    {% if params.main.use_fluentd | bool %}

    fluentd_port: "{{ params.main.custom_args.fluentd.port }}"

    {% set var_fluentd_output_plugin = params.main.custom_args.fluentd.output_plugin
      | default(
        (var_pod_type in ['app']) | ternary('file', 'elasticsearch')
      )
    %}

    fluentd_output_plugin: "{{ var_fluentd_output_plugin }}"

    {% if var_fluentd_output_plugin == 'elasticsearch' %}

    elasticsearch_host_ip: "{{ params.dependencies_node_ip_dict['elasticsearch'] }}"

    {% endif %}

    {% endif %}

{% if var_pod_type in ['app', 'web'] %}

{% if not params.main.custom_args.nginx.custom | default(false) | bool %}

- src: "{{ var_main_dir }}/templates/nginx/nginx.conf"
  dest: "{{ var_main_base_dir }}/env/nginx/nginx.conf"
  root: true
  params:
    conf: {{ params.main.custom_args.nginx.conf | default({}) | to_json }}
    enable_validate_origin: "{{ params.main.custom_args.nginx.enable_validate_origin }}"
    main_domain: "{{ params.main.custom_domain.main_domain }}"
    main_port: "{{ var_main_domain_port }}"
    main_ssl: "{{ params.main.custom_domain.main_ssl }}"
    main: "{{ params.main.custom_args.nginx.main | default({}) }}"
    use_theia: "{{ params.main.use_theia }}"

    {% if params.main.use_theia | bool %}

    theia_domain: "{{ params.main.custom_domain.theia_domain }}"
    theia_port: "{{ var_theia_domain_port }}"
    theia_ssl: "{{ params.main.custom_domain.theia_ssl }}"

    {% endif %}

    use_minio_gateway: "{{ params.main.use_minio_gateway }}"

    {% if params.main.use_minio_gateway | bool %}

    minio_gateway_domain: "{{ params.main.custom_domain.minio_gateway_domain }}"
    minio_gateway_port: "{{ var_minio_gateway_domain_port }}"
    minio_gateway_ssl: "{{ params.main.custom_domain.minio_gateway_ssl }}"

    {% endif %}

    use_filestash: "{{ params.main.use_filestash }}"

    {% if params.main.use_filestash | bool %}

    filestash_domain: "{{ params.main.custom_domain.filestash_domain }}"
    filestash_port: "{{ var_filestash_domain_port }}"
    filestash_ssl: "{{ params.main.custom_domain.filestash_ssl }}"

    {% endif %}

    use_nextcloud: "{{ params.main.use_nextcloud }}"

    {% if params.main.use_nextcloud | bool %}

    nextcloud_domain: "{{ params.main.custom_domain.nextcloud_domain }}"
    nextcloud_port: "{{ var_nextcloud_domain_port }}"
    nextcloud_ssl: "{{ params.main.custom_domain.nextcloud_ssl }}"

    {% endif %}

    use_pma: "{{ params.main.use_pma }}"

    {% if params.main.use_pma | bool %}

    pma_domain: "{{ params.main.custom_domain.pma_domain }}"
    pma_port: "{{ var_pma_domain_port }}"
    pma_ssl: "{{ params.main.custom_domain.pma_ssl }}"

    {% endif %}

    use_adminer: "{{ params.main.use_adminer }}"

    {% if params.main.use_adminer | bool %}

    adminer_domain: "{{ params.main.custom_domain.adminer_domain }}"
    adminer_port: "{{ var_adminer_domain_port }}"
    adminer_ssl: "{{ params.main.custom_domain.adminer_ssl }}"

    {% endif %}

{% endif %}

{% set var_main_domain = params.main.custom_domain.main_domain %}
{% set var_main_external_port = var_main_domain_port %}
{% set var_main_external_host = (params.main.custom_domain.main_ssl | bool | ternary('https', 'http'))
  + '://' + var_main_domain
  + (((var_main_external_port | string) in ['80', '443'])
  | ternary('', ':' + (var_main_external_port | string)))
%}

- src: "{{ var_main_dir }}/templates/wordpress/wp.env"
  dest: "{{ var_main_base_dir }}/env/wordpress/.env"
  root: true
  params:
    env: "{{ params.main.custom_args.wordpress.env }}"
    db_host: "{{ params.main.custom_args.mysql.host }}"
    db_port: "{{ params.main.custom_args.mysql.port }}"
    db_name: "{{ params.credentials.wordpress.db.name }}"
    db_user: "{{ params.credentials.wordpress.db.user }}"
    db_password: "{{ params.credentials.wordpress.db.password }}"
    home: "{{ var_main_external_host }}"
    auth_key: "{{ params.credentials.wordpress.config.auth_key }}"
    secure_auth_key: "{{ params.credentials.wordpress.config.secure_auth_key }}"
    logged_in_key: "{{ params.credentials.wordpress.config.logged_in_key }}"
    nonce_key: "{{ params.credentials.wordpress.config.nonce_key }}"
    auth_salt: "{{ params.credentials.wordpress.config.auth_salt }}"
    secure_auth_salt: "{{ params.credentials.wordpress.config.secure_auth_salt }}"
    logged_in_salt: "{{ params.credentials.wordpress.config.logged_in_salt }}"
    nonce_salt: "{{ params.credentials.wordpress.config.nonce_salt }}"
    table_prefix: "{{ params.main.custom_args.wordpress.table_prefix | default('wp_') }}"
    wplang: "{{ params.main.custom_args.wordpress.lang }}"
    wp_debug: "{{ params.main.custom_args.wordpress.debug | default(false) | lower }}"

{% endif %}

{% if var_pod_type in ['app', 'db'] %}

- src: "{{ var_shared_dir }}/templates/mysql/init.sql"
  dest: "{{ var_main_base_dir }}/env/mysql/init.sql"
  root: true
  params:
    viewer_password: "{{ params.credentials.mysql.viewer_password }}"
    db_name: "{{ params.credentials.wordpress.db.name }}"
    db_user: "{{ params.credentials.wordpress.db.user }}"
    db_password: "{{ params.credentials.wordpress.db.password }}"

{% endif %}

children:

- name: "main/scripts/vars.run.yml"
  params:
    env_params: {{ params | to_json }}
    pod_custom_dir: "{{ var_main_base_dir }}"
    run: {{ var_run | to_json }}
    run_tasks: {{ var_run_tasks | to_json }}
    run_dict: {{ var_run_dict | to_json }}
    run_tasks_dict: {{ var_run_tasks_dict | to_json }}
    run_custom:
      
      {% if var_local | bool %}

      var_data_dir_rel: "{{ params.pod.data_dir }}"

      {% else %}

      var_data_dir: "{{ params.pod.data_dir }}"

      {% endif %}
      
      var_shared__script_dir: "{{ var_shared_dir }}/scripts"
      var_custom__pod_type: "{{ var_pod_type }}"
      var_custom__local: "{{ var_local | bool | ternary('true', 'false') }}"
      var_custom__use_main_network: "true"
      var_custom__use_logrotator: "true"
      var_custom__use_nginx: "true"
      var_custom__use_mysql: "true"
      var_custom__use_fluentd: "{{ params.main.use_fluentd | bool | ternary('true', 'false') }}"

      {% if var_pod_type in ['app', 'web'] %}

      var_custom__use_certbot: "{{ params.main.use_certbot | bool | ternary('true', 'false') }}"
      var_custom__use_nextcloud: "{{ params.main.use_nextcloud | bool | ternary('true', 'false') }}"

      {% if params.main.use_nextcloud | bool %}

      {% set var_nextcloud_protocol = (params.main.custom_domain.nextcloud_ssl | bool | ternary('https', 'http')) %}
      {% set var_nextcloud_port_suffix = (var_nextcloud_domain_port in ['80', '443'])
        | ternary('', ':' + var_nextcloud_domain_port)
      %}

      {% set var_nextcloud_url = var_nextcloud_protocol + '://' +
        params.main.custom_domain.nextcloud_domain + var_nextcloud_port_suffix
      %}

      var_shared__nextcloud__setup__url: "{{ var_nextcloud_url }}"
      var_shared__nextcloud__setup__domain: "{{ params.main.custom_domain.nextcloud_domain }}"
      var_shared__nextcloud__setup__host: "{{ params.main.custom_domain.nextcloud_domain }}{{ var_nextcloud_port_suffix }}"
      var_shared__nextcloud__setup__protocol: "{{ var_nextcloud_protocol }}"
      var_shared__nextcloud__setup__admin_user: "{{ params.credentials.nextcloud.admin_user }}"
      var_shared__nextcloud__setup__admin_pass: "{{ params.credentials.nextcloud.admin_pass }}"
      var_shared__nextcloud__s3_backup__enable: "true"
      var_shared__nextcloud__s3_backup__access_key: "{{ params.credentials.wp_backup_bucket.access_key }}"
      var_shared__nextcloud__s3_backup__secret_key: "{{ params.credentials.wp_backup_bucket.secret_key }}"
      var_shared__nextcloud__s3_backup__bucket: "{{ params.main.backup_bucket_name }}"
      var_shared__nextcloud__s3_backup__hostname: "{{ params.credentials.wp_backup_bucket.host | default('') }}"
      var_shared__nextcloud__s3_backup__port: "{{ params.credentials.wp_backup_bucket.port | default('') }}"
      var_shared__nextcloud__s3_backup__region: "{{ params.credentials.wp_backup_bucket.region | default('') }}"
      var_shared__nextcloud__s3_backup__use_ssl: "{{ params.credentials.wp_backup_bucket.ssl | default(false) | bool | ternary('true', 'false') }}"
      var_shared__nextcloud__s3_backup__use_path_style: "{{ params.credentials.wp_backup_bucket.path_style | default('') }}"
      var_shared__nextcloud__s3_backup__legacy_auth: "{{ params.credentials.wp_backup_bucket.legacy_auth | default('') }}"
      var_shared__nextcloud__s3_uploads__enable: "true"
      var_shared__nextcloud__s3_uploads__access_key: "{{ params.credentials.wp_uploads_bucket.access_key }}"
      var_shared__nextcloud__s3_uploads__secret_key: "{{ params.credentials.wp_uploads_bucket.secret_key }}"
      var_shared__nextcloud__s3_uploads__bucket: "{{ params.main.uploads_bucket_name }}"
      var_shared__nextcloud__s3_uploads__hostname: "{{ params.credentials.wp_uploads_bucket.host | default('') }}"
      var_shared__nextcloud__s3_uploads__port: "{{ params.credentials.wp_uploads_bucket.port | default('') }}"
      var_shared__nextcloud__s3_uploads__region: "{{ params.credentials.wp_uploads_bucket.region | default('') }}"
      var_shared__nextcloud__s3_uploads__use_ssl: "{{ params.credentials.wp_uploads_bucket.ssl | default(false) | bool | ternary('true', 'false') }}"
      var_shared__nextcloud__s3_uploads__use_path_style: "{{ params.credentials.wp_uploads_bucket.path_style | default('') }}"
      var_shared__nextcloud__s3_uploads__legacy_auth: "{{ params.credentials.wp_uploads_bucket.legacy_auth | default('') }}"

      {% endif %}

      var_custom__block_ips: "{{ params.main.block_ips | bool | ternary('true', 'false') }}"

      {% if params.main.block_ips | bool %}

      var_shared__block_ips__action_exec__max_amount: "{{ params.main.block_ips.max_amount | default('10000') }}"
      var_shared__block_ips__action_exec__amount_day: "{{ params.main.block_ips.amount_day | default('20000') }}"
      var_shared__block_ips__action_exec__amount_hour: "{{ params.main.block_ips.amount_hour | default('3600') }}"

      {% endif %}

      {% if var_local %}

      var_custom__use_composer: "{{ params.main.use_composer | bool | ternary('true', 'false') }}"

      {% endif %}

      {% endif %}

      {% if var_local and (var_pod_type in ['app', 'web']) %}

      {% set var_wp_app_name = params.main.custom_args.wordpress.app_name | default('') %}
      {% set var_dev_repo_dir_wordpress = params.pod.app[var_wp_app_name].dir_rel | default('') %}

      var_dev__repo_dir_wordpress: "{{ var_dev_repo_dir_wordpress }}"

      {% endif %}

      var_custom__log_summary__days_ago: "{{ params.main.log_summary.days_ago | default('1') }}"
      var_custom__log_summary__max_amount: "{{ params.main.log_summary.max_amount | default('100') }}"
      var_custom__log_summary__verify_size_docker_dir: >-
        {{ params.main.log_summary.verify_size_docker_dir | default(false) | bool | ternary('true', 'false') }}
      var_custom__log_summary__verify_size_containers: >-
        {{ params.main.log_summary.verify_size_containers | default(true) | bool | ternary('true', 'false') }}
